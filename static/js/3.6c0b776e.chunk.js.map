{"version":3,"sources":["../node_modules/keyboardjs/lib/key-combo.js","../node_modules/keyboardjs/lib/locale.js","../node_modules/keyboardjs/lib/keyboard.js","../node_modules/keyboardjs/locales/us.js","../node_modules/keyboardjs/index.js"],"names":["KeyCombo","keyComboStr","this","sourceStr","subCombos","parseComboStr","keyNames","reduce","memo","nextSubCombo","concat","sequenceDeliminator","comboDeliminator","keyDeliminator","subComboStrs","_splitStr","combo","i","length","push","prototype","check","pressedKeyNames","startingKeyNameIndex","_checkSubCombo","isEqual","otherKeyCombo","subCombo","otherSubCombo","slice","j","keyName","index","indexOf","splice","str","deliminator","s","d","c","ca","ci","trim","endIndex","escapedKeyName","module","exports","__webpack_require__","Locale","name","localeName","pressedKeys","_appliedMacros","_keyMap","_killKeyCodes","_macros","bindKeyCode","keyCode","bindMacro","handler","macro","keyCombo","getKeyCodes","keyCodes","getKeyNames","setKillKey","pressKey","_applyMacros","releaseKey","_clearMacros","macros","global","Keyboard","targetWindow","targetElement","platform","userAgent","_locale","_currentContext","_contexts","_listeners","_appliedListeners","_locales","_targetElement","_targetWindow","_targetPlatform","_targetUserAgent","_isModernBrowser","_targetKeyDownBinding","_targetKeyUpBinding","_targetResetBinding","_paused","_callerHandler","setContext","watch","setLocale","localeBuilder","locale","_localeName","getLocale","localName","bind","pressHandler","releaseHandler","preventRepeatByDefault","preventRepeat","addListener","on","unbind","listener","comboMatches","pressHandlerMatches","releaseHandlerMatches","removeListener","off","contextName","releaseAllKeys","getContext","withContext","callback","previousContextName","targetPlatform","targetUserAgent","_this","stop","addEventListener","attachEvent","Error","nodeType","navigator","document","event","_handleCommandBug","_bindEvent","_unbindEvent","_applyBindings","_clearBindings","pause","resume","reset","eventName","removeEventListener","detachEvent","_getGroupedListeners","listenerGroups","listenerGroupMap","listeners","sort","a","b","forEach","l","mapIndex","join","call","oldCaller","match","includes","String","fromCharCode","capitalKeyName","leftCommandKeyCode","rightCommandKeyCode","semicolonKeyCode","dashKeyCode","equalKeyCode","keyboard"],"mappings":"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","file":"static/js/3.6c0b776e.chunk.js","sourcesContent":["function KeyCombo(keyComboStr) {\n  this.sourceStr = keyComboStr;\n  this.subCombos = KeyCombo.parseComboStr(keyComboStr);\n  this.keyNames = this.subCombos.reduce(function (memo, nextSubCombo) {\n    return memo.concat(nextSubCombo);\n  }, []);\n} // TODO: Add support for key combo sequences\n\n\nKeyCombo.sequenceDeliminator = '>>';\nKeyCombo.comboDeliminator = '>';\nKeyCombo.keyDeliminator = '+';\n\nKeyCombo.parseComboStr = function (keyComboStr) {\n  var subComboStrs = KeyCombo._splitStr(keyComboStr, KeyCombo.comboDeliminator);\n\n  var combo = [];\n\n  for (var i = 0; i < subComboStrs.length; i += 1) {\n    combo.push(KeyCombo._splitStr(subComboStrs[i], KeyCombo.keyDeliminator));\n  }\n\n  return combo;\n};\n\nKeyCombo.prototype.check = function (pressedKeyNames) {\n  var startingKeyNameIndex = 0;\n\n  for (var i = 0; i < this.subCombos.length; i += 1) {\n    startingKeyNameIndex = this._checkSubCombo(this.subCombos[i], startingKeyNameIndex, pressedKeyNames);\n\n    if (startingKeyNameIndex === -1) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nKeyCombo.prototype.isEqual = function (otherKeyCombo) {\n  if (!otherKeyCombo || typeof otherKeyCombo !== 'string' && typeof otherKeyCombo !== 'object') {\n    return false;\n  }\n\n  if (typeof otherKeyCombo === 'string') {\n    otherKeyCombo = new KeyCombo(otherKeyCombo);\n  }\n\n  if (this.subCombos.length !== otherKeyCombo.subCombos.length) {\n    return false;\n  }\n\n  for (var i = 0; i < this.subCombos.length; i += 1) {\n    if (this.subCombos[i].length !== otherKeyCombo.subCombos[i].length) {\n      return false;\n    }\n  }\n\n  for (var i = 0; i < this.subCombos.length; i += 1) {\n    var subCombo = this.subCombos[i];\n    var otherSubCombo = otherKeyCombo.subCombos[i].slice(0);\n\n    for (var j = 0; j < subCombo.length; j += 1) {\n      var keyName = subCombo[j];\n      var index = otherSubCombo.indexOf(keyName);\n\n      if (index > -1) {\n        otherSubCombo.splice(index, 1);\n      }\n    }\n\n    if (otherSubCombo.length !== 0) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nKeyCombo._splitStr = function (str, deliminator) {\n  var s = str;\n  var d = deliminator;\n  var c = '';\n  var ca = [];\n\n  for (var ci = 0; ci < s.length; ci += 1) {\n    if (ci > 0 && s[ci] === d && s[ci - 1] !== '\\\\') {\n      ca.push(c.trim());\n      c = '';\n      ci += 1;\n    }\n\n    c += s[ci];\n  }\n\n  if (c) {\n    ca.push(c.trim());\n  }\n\n  return ca;\n};\n\nKeyCombo.prototype._checkSubCombo = function (subCombo, startingKeyNameIndex, pressedKeyNames) {\n  subCombo = subCombo.slice(0);\n  pressedKeyNames = pressedKeyNames.slice(startingKeyNameIndex);\n  var endIndex = startingKeyNameIndex;\n\n  for (var i = 0; i < subCombo.length; i += 1) {\n    var keyName = subCombo[i];\n\n    if (keyName[0] === '\\\\') {\n      var escapedKeyName = keyName.slice(1);\n\n      if (escapedKeyName === KeyCombo.comboDeliminator || escapedKeyName === KeyCombo.keyDeliminator) {\n        keyName = escapedKeyName;\n      }\n    }\n\n    var index = pressedKeyNames.indexOf(keyName);\n\n    if (index > -1) {\n      subCombo.splice(i, 1);\n      i -= 1;\n\n      if (index > endIndex) {\n        endIndex = index;\n      }\n\n      if (subCombo.length === 0) {\n        return endIndex;\n      }\n    }\n  }\n\n  return -1;\n};\n\nmodule.exports = KeyCombo;","var KeyCombo = require('./key-combo');\n\nfunction Locale(name) {\n  this.localeName = name;\n  this.pressedKeys = [];\n  this._appliedMacros = [];\n  this._keyMap = {};\n  this._killKeyCodes = [];\n  this._macros = [];\n}\n\nLocale.prototype.bindKeyCode = function (keyCode, keyNames) {\n  if (typeof keyNames === 'string') {\n    keyNames = [keyNames];\n  }\n\n  this._keyMap[keyCode] = keyNames;\n};\n\nLocale.prototype.bindMacro = function (keyComboStr, keyNames) {\n  if (typeof keyNames === 'string') {\n    keyNames = [keyNames];\n  }\n\n  var handler = null;\n\n  if (typeof keyNames === 'function') {\n    handler = keyNames;\n    keyNames = null;\n  }\n\n  var macro = {\n    keyCombo: new KeyCombo(keyComboStr),\n    keyNames: keyNames,\n    handler: handler\n  };\n\n  this._macros.push(macro);\n};\n\nLocale.prototype.getKeyCodes = function (keyName) {\n  var keyCodes = [];\n\n  for (var keyCode in this._keyMap) {\n    var index = this._keyMap[keyCode].indexOf(keyName);\n\n    if (index > -1) {\n      keyCodes.push(keyCode | 0);\n    }\n  }\n\n  return keyCodes;\n};\n\nLocale.prototype.getKeyNames = function (keyCode) {\n  return this._keyMap[keyCode] || [];\n};\n\nLocale.prototype.setKillKey = function (keyCode) {\n  if (typeof keyCode === 'string') {\n    var keyCodes = this.getKeyCodes(keyCode);\n\n    for (var i = 0; i < keyCodes.length; i += 1) {\n      this.setKillKey(keyCodes[i]);\n    }\n\n    return;\n  }\n\n  this._killKeyCodes.push(keyCode);\n};\n\nLocale.prototype.pressKey = function (keyCode) {\n  if (typeof keyCode === 'string') {\n    var keyCodes = this.getKeyCodes(keyCode);\n\n    for (var i = 0; i < keyCodes.length; i += 1) {\n      this.pressKey(keyCodes[i]);\n    }\n\n    return;\n  }\n\n  var keyNames = this.getKeyNames(keyCode);\n\n  for (var i = 0; i < keyNames.length; i += 1) {\n    if (this.pressedKeys.indexOf(keyNames[i]) === -1) {\n      this.pressedKeys.push(keyNames[i]);\n    }\n  }\n\n  this._applyMacros();\n};\n\nLocale.prototype.releaseKey = function (keyCode) {\n  if (typeof keyCode === 'string') {\n    var keyCodes = this.getKeyCodes(keyCode);\n\n    for (var i = 0; i < keyCodes.length; i += 1) {\n      this.releaseKey(keyCodes[i]);\n    }\n  } else {\n    var keyNames = this.getKeyNames(keyCode);\n\n    var killKeyCodeIndex = this._killKeyCodes.indexOf(keyCode);\n\n    if (killKeyCodeIndex > -1) {\n      this.pressedKeys.length = 0;\n    } else {\n      for (var i = 0; i < keyNames.length; i += 1) {\n        var index = this.pressedKeys.indexOf(keyNames[i]);\n\n        if (index > -1) {\n          this.pressedKeys.splice(index, 1);\n        }\n      }\n    }\n\n    this._clearMacros();\n  }\n};\n\nLocale.prototype._applyMacros = function () {\n  var macros = this._macros.slice(0);\n\n  for (var i = 0; i < macros.length; i += 1) {\n    var macro = macros[i];\n\n    if (macro.keyCombo.check(this.pressedKeys)) {\n      if (macro.handler) {\n        macro.keyNames = macro.handler(this.pressedKeys);\n      }\n\n      for (var j = 0; j < macro.keyNames.length; j += 1) {\n        if (this.pressedKeys.indexOf(macro.keyNames[j]) === -1) {\n          this.pressedKeys.push(macro.keyNames[j]);\n        }\n      }\n\n      this._appliedMacros.push(macro);\n    }\n  }\n};\n\nLocale.prototype._clearMacros = function () {\n  for (var i = 0; i < this._appliedMacros.length; i += 1) {\n    var macro = this._appliedMacros[i];\n\n    if (!macro.keyCombo.check(this.pressedKeys)) {\n      for (var j = 0; j < macro.keyNames.length; j += 1) {\n        var index = this.pressedKeys.indexOf(macro.keyNames[j]);\n\n        if (index > -1) {\n          this.pressedKeys.splice(index, 1);\n        }\n      }\n\n      if (macro.handler) {\n        macro.keyNames = null;\n      }\n\n      this._appliedMacros.splice(i, 1);\n\n      i -= 1;\n    }\n  }\n};\n\nmodule.exports = Locale;","var Locale = require('./locale');\n\nvar KeyCombo = require('./key-combo');\n\nfunction Keyboard(targetWindow, targetElement, platform, userAgent) {\n  this._locale = null;\n  this._currentContext = null;\n  this._contexts = {};\n  this._listeners = [];\n  this._appliedListeners = [];\n  this._locales = {};\n  this._targetElement = null;\n  this._targetWindow = null;\n  this._targetPlatform = '';\n  this._targetUserAgent = '';\n  this._isModernBrowser = false;\n  this._targetKeyDownBinding = null;\n  this._targetKeyUpBinding = null;\n  this._targetResetBinding = null;\n  this._paused = false;\n  this._callerHandler = null;\n  this.setContext('global');\n  this.watch(targetWindow, targetElement, platform, userAgent);\n}\n\nKeyboard.prototype.setLocale = function (localeName, localeBuilder) {\n  var locale = null;\n\n  if (typeof localeName === 'string') {\n    if (localeBuilder) {\n      locale = new Locale(localeName);\n      localeBuilder(locale, this._targetPlatform, this._targetUserAgent);\n    } else {\n      locale = this._locales[localeName] || null;\n    }\n  } else {\n    locale = localeName;\n    localeName = locale._localeName;\n  }\n\n  this._locale = locale;\n  this._locales[localeName] = locale;\n\n  if (locale) {\n    this._locale.pressedKeys = locale.pressedKeys;\n  }\n};\n\nKeyboard.prototype.getLocale = function (localName) {\n  localName || (localName = this._locale.localeName);\n  return this._locales[localName] || null;\n};\n\nKeyboard.prototype.bind = function (keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n  if (keyComboStr === null || typeof keyComboStr === 'function') {\n    preventRepeatByDefault = releaseHandler;\n    releaseHandler = pressHandler;\n    pressHandler = keyComboStr;\n    keyComboStr = null;\n  }\n\n  if (keyComboStr && typeof keyComboStr === 'object' && typeof keyComboStr.length === 'number') {\n    for (var i = 0; i < keyComboStr.length; i += 1) {\n      this.bind(keyComboStr[i], pressHandler, releaseHandler);\n    }\n\n    return;\n  }\n\n  this._listeners.push({\n    keyCombo: keyComboStr ? new KeyCombo(keyComboStr) : null,\n    pressHandler: pressHandler || null,\n    releaseHandler: releaseHandler || null,\n    preventRepeat: preventRepeatByDefault || false,\n    preventRepeatByDefault: preventRepeatByDefault || false\n  });\n};\n\nKeyboard.prototype.addListener = Keyboard.prototype.bind;\nKeyboard.prototype.on = Keyboard.prototype.bind;\n\nKeyboard.prototype.unbind = function (keyComboStr, pressHandler, releaseHandler) {\n  if (keyComboStr === null || typeof keyComboStr === 'function') {\n    releaseHandler = pressHandler;\n    pressHandler = keyComboStr;\n    keyComboStr = null;\n  }\n\n  if (keyComboStr && typeof keyComboStr === 'object' && typeof keyComboStr.length === 'number') {\n    for (var i = 0; i < keyComboStr.length; i += 1) {\n      this.unbind(keyComboStr[i], pressHandler, releaseHandler);\n    }\n\n    return;\n  }\n\n  for (var i = 0; i < this._listeners.length; i += 1) {\n    var listener = this._listeners[i];\n    var comboMatches = !keyComboStr && !listener.keyCombo || listener.keyCombo && listener.keyCombo.isEqual(keyComboStr);\n    var pressHandlerMatches = !pressHandler && !releaseHandler || !pressHandler && !listener.pressHandler || pressHandler === listener.pressHandler;\n    var releaseHandlerMatches = !pressHandler && !releaseHandler || !releaseHandler && !listener.releaseHandler || releaseHandler === listener.releaseHandler;\n\n    if (comboMatches && pressHandlerMatches && releaseHandlerMatches) {\n      this._listeners.splice(i, 1);\n\n      i -= 1;\n    }\n  }\n};\n\nKeyboard.prototype.removeListener = Keyboard.prototype.unbind;\nKeyboard.prototype.off = Keyboard.prototype.unbind;\n\nKeyboard.prototype.setContext = function (contextName) {\n  if (this._locale) {\n    this.releaseAllKeys();\n  }\n\n  if (!this._contexts[contextName]) {\n    this._contexts[contextName] = [];\n  }\n\n  this._listeners = this._contexts[contextName];\n  this._currentContext = contextName;\n};\n\nKeyboard.prototype.getContext = function () {\n  return this._currentContext;\n};\n\nKeyboard.prototype.withContext = function (contextName, callback) {\n  var previousContextName = this.getContext();\n  this.setContext(contextName);\n  callback();\n  this.setContext(previousContextName);\n};\n\nKeyboard.prototype.watch = function (targetWindow, targetElement, targetPlatform, targetUserAgent) {\n  var _this = this;\n\n  this.stop();\n\n  if (!targetWindow) {\n    if (!global.addEventListener && !global.attachEvent) {\n      throw new Error('Cannot find global functions addEventListener or attachEvent.');\n    }\n\n    targetWindow = global;\n  }\n\n  if (typeof targetWindow.nodeType === 'number') {\n    targetUserAgent = targetPlatform;\n    targetPlatform = targetElement;\n    targetElement = targetWindow;\n    targetWindow = global;\n  }\n\n  if (!targetWindow.addEventListener && !targetWindow.attachEvent) {\n    throw new Error('Cannot find addEventListener or attachEvent methods on targetWindow.');\n  }\n\n  this._isModernBrowser = !!targetWindow.addEventListener;\n  var userAgent = targetWindow.navigator && targetWindow.navigator.userAgent || '';\n  var platform = targetWindow.navigator && targetWindow.navigator.platform || '';\n  targetElement && targetElement !== null || (targetElement = targetWindow.document);\n  targetPlatform && targetPlatform !== null || (targetPlatform = platform);\n  targetUserAgent && targetUserAgent !== null || (targetUserAgent = userAgent);\n\n  this._targetKeyDownBinding = function (event) {\n    _this.pressKey(event.keyCode, event);\n\n    _this._handleCommandBug(event, platform);\n  };\n\n  this._targetKeyUpBinding = function (event) {\n    _this.releaseKey(event.keyCode, event);\n  };\n\n  this._targetResetBinding = function (event) {\n    _this.releaseAllKeys(event);\n  };\n\n  this._bindEvent(targetElement, 'keydown', this._targetKeyDownBinding);\n\n  this._bindEvent(targetElement, 'keyup', this._targetKeyUpBinding);\n\n  this._bindEvent(targetWindow, 'focus', this._targetResetBinding);\n\n  this._bindEvent(targetWindow, 'blur', this._targetResetBinding);\n\n  this._targetElement = targetElement;\n  this._targetWindow = targetWindow;\n  this._targetPlatform = targetPlatform;\n  this._targetUserAgent = targetUserAgent;\n};\n\nKeyboard.prototype.stop = function () {\n  var _this = this;\n\n  if (!this._targetElement || !this._targetWindow) {\n    return;\n  }\n\n  this._unbindEvent(this._targetElement, 'keydown', this._targetKeyDownBinding);\n\n  this._unbindEvent(this._targetElement, 'keyup', this._targetKeyUpBinding);\n\n  this._unbindEvent(this._targetWindow, 'focus', this._targetResetBinding);\n\n  this._unbindEvent(this._targetWindow, 'blur', this._targetResetBinding);\n\n  this._targetWindow = null;\n  this._targetElement = null;\n};\n\nKeyboard.prototype.pressKey = function (keyCode, event) {\n  if (this._paused) {\n    return;\n  }\n\n  if (!this._locale) {\n    throw new Error('Locale not set');\n  }\n\n  this._locale.pressKey(keyCode);\n\n  this._applyBindings(event);\n};\n\nKeyboard.prototype.releaseKey = function (keyCode, event) {\n  if (this._paused) {\n    return;\n  }\n\n  if (!this._locale) {\n    throw new Error('Locale not set');\n  }\n\n  this._locale.releaseKey(keyCode);\n\n  this._clearBindings(event);\n};\n\nKeyboard.prototype.releaseAllKeys = function (event) {\n  if (this._paused) {\n    return;\n  }\n\n  if (!this._locale) {\n    throw new Error('Locale not set');\n  }\n\n  this._locale.pressedKeys.length = 0;\n\n  this._clearBindings(event);\n};\n\nKeyboard.prototype.pause = function () {\n  if (this._paused) {\n    return;\n  }\n\n  if (this._locale) {\n    this.releaseAllKeys();\n  }\n\n  this._paused = true;\n};\n\nKeyboard.prototype.resume = function () {\n  this._paused = false;\n};\n\nKeyboard.prototype.reset = function () {\n  this.releaseAllKeys();\n  this._listeners.length = 0;\n};\n\nKeyboard.prototype._bindEvent = function (targetElement, eventName, handler) {\n  return this._isModernBrowser ? targetElement.addEventListener(eventName, handler, false) : targetElement.attachEvent('on' + eventName, handler);\n};\n\nKeyboard.prototype._unbindEvent = function (targetElement, eventName, handler) {\n  return this._isModernBrowser ? targetElement.removeEventListener(eventName, handler, false) : targetElement.detachEvent('on' + eventName, handler);\n};\n\nKeyboard.prototype._getGroupedListeners = function () {\n  var listenerGroups = [];\n  var listenerGroupMap = [];\n  var listeners = this._listeners;\n\n  if (this._currentContext !== 'global') {\n    listeners = [].concat(listeners, this._contexts.global);\n  }\n\n  listeners.sort(function (a, b) {\n    return (b.keyCombo ? b.keyCombo.keyNames.length : 0) - (a.keyCombo ? a.keyCombo.keyNames.length : 0);\n  }).forEach(function (l) {\n    var mapIndex = -1;\n\n    for (var i = 0; i < listenerGroupMap.length; i += 1) {\n      if (listenerGroupMap[i] === null && l.keyCombo === null || listenerGroupMap[i] !== null && listenerGroupMap[i].isEqual(l.keyCombo)) {\n        mapIndex = i;\n      }\n    }\n\n    if (mapIndex === -1) {\n      mapIndex = listenerGroupMap.length;\n      listenerGroupMap.push(l.keyCombo);\n    }\n\n    if (!listenerGroups[mapIndex]) {\n      listenerGroups[mapIndex] = [];\n    }\n\n    listenerGroups[mapIndex].push(l);\n  });\n  return listenerGroups;\n};\n\nKeyboard.prototype._applyBindings = function (event) {\n  var preventRepeat = false;\n  event || (event = {});\n\n  event.preventRepeat = function () {\n    preventRepeat = true;\n  };\n\n  event.pressedKeys = this._locale.pressedKeys.slice(0);\n\n  var pressedKeys = this._locale.pressedKeys.slice(0);\n\n  var listenerGroups = this._getGroupedListeners();\n\n  for (var i = 0; i < listenerGroups.length; i += 1) {\n    var listeners = listenerGroups[i];\n    var keyCombo = listeners[0].keyCombo;\n\n    if (keyCombo === null || keyCombo.check(pressedKeys)) {\n      for (var j = 0; j < listeners.length; j += 1) {\n        var listener = listeners[j];\n\n        if (keyCombo === null) {\n          listener = {\n            keyCombo: new KeyCombo(pressedKeys.join('+')),\n            pressHandler: listener.pressHandler,\n            releaseHandler: listener.releaseHandler,\n            preventRepeat: listener.preventRepeat,\n            preventRepeatByDefault: listener.preventRepeatByDefault\n          };\n        }\n\n        if (listener.pressHandler && !listener.preventRepeat) {\n          listener.pressHandler.call(this, event);\n\n          if (preventRepeat) {\n            listener.preventRepeat = preventRepeat;\n            preventRepeat = false;\n          }\n        }\n\n        if (listener.releaseHandler && this._appliedListeners.indexOf(listener) === -1) {\n          this._appliedListeners.push(listener);\n        }\n      }\n\n      if (keyCombo) {\n        for (var j = 0; j < keyCombo.keyNames.length; j += 1) {\n          var index = pressedKeys.indexOf(keyCombo.keyNames[j]);\n\n          if (index !== -1) {\n            pressedKeys.splice(index, 1);\n            j -= 1;\n          }\n        }\n      }\n    }\n  }\n};\n\nKeyboard.prototype._clearBindings = function (event) {\n  event || (event = {});\n\n  for (var i = 0; i < this._appliedListeners.length; i += 1) {\n    var listener = this._appliedListeners[i];\n    var keyCombo = listener.keyCombo;\n\n    if (keyCombo === null || !keyCombo.check(this._locale.pressedKeys)) {\n      if (this._callerHandler !== listener.releaseHandler) {\n        var oldCaller = this._callerHandler;\n        this._callerHandler = listener.releaseHandler;\n        listener.preventRepeat = listener.preventRepeatByDefault;\n        listener.releaseHandler.call(this, event);\n        this._callerHandler = oldCaller;\n      }\n\n      this._appliedListeners.splice(i, 1);\n\n      i -= 1;\n    }\n  }\n};\n\nKeyboard.prototype._handleCommandBug = function (event, platform) {\n  // On Mac when the command key is kept pressed, keyup is not triggered for any other key.\n  // In this case force a keyup for non-modifier keys directly after the keypress.\n  var modifierKeys = [\"shift\", \"ctrl\", \"alt\", \"capslock\", \"tab\", \"command\"];\n\n  if (platform.match(\"Mac\") && this._locale.pressedKeys.includes(\"command\") && !modifierKeys.includes(this._locale.getKeyNames(event.keyCode)[0])) {\n    this._targetKeyUpBinding(event);\n  }\n};\n\nmodule.exports = Keyboard;","module.exports = function (locale, platform, userAgent) {\n  // general\n  locale.bindKeyCode(3, ['cancel']);\n  locale.bindKeyCode(8, ['backspace']);\n  locale.bindKeyCode(9, ['tab']);\n  locale.bindKeyCode(12, ['clear']);\n  locale.bindKeyCode(13, ['enter']);\n  locale.bindKeyCode(16, ['shift']);\n  locale.bindKeyCode(17, ['ctrl']);\n  locale.bindKeyCode(18, ['alt', 'menu']);\n  locale.bindKeyCode(19, ['pause', 'break']);\n  locale.bindKeyCode(20, ['capslock']);\n  locale.bindKeyCode(27, ['escape', 'esc']);\n  locale.bindKeyCode(32, ['space', 'spacebar']);\n  locale.bindKeyCode(33, ['pageup']);\n  locale.bindKeyCode(34, ['pagedown']);\n  locale.bindKeyCode(35, ['end']);\n  locale.bindKeyCode(36, ['home']);\n  locale.bindKeyCode(37, ['left']);\n  locale.bindKeyCode(38, ['up']);\n  locale.bindKeyCode(39, ['right']);\n  locale.bindKeyCode(40, ['down']);\n  locale.bindKeyCode(41, ['select']);\n  locale.bindKeyCode(42, ['printscreen']);\n  locale.bindKeyCode(43, ['execute']);\n  locale.bindKeyCode(44, ['snapshot']);\n  locale.bindKeyCode(45, ['insert', 'ins']);\n  locale.bindKeyCode(46, ['delete', 'del']);\n  locale.bindKeyCode(47, ['help']);\n  locale.bindKeyCode(145, ['scrolllock', 'scroll']);\n  locale.bindKeyCode(188, ['comma', ',']);\n  locale.bindKeyCode(190, ['period', '.']);\n  locale.bindKeyCode(191, ['slash', 'forwardslash', '/']);\n  locale.bindKeyCode(192, ['graveaccent', '`']);\n  locale.bindKeyCode(219, ['openbracket', '[']);\n  locale.bindKeyCode(220, ['backslash', '\\\\']);\n  locale.bindKeyCode(221, ['closebracket', ']']);\n  locale.bindKeyCode(222, ['apostrophe', '\\'']); // 0-9\n\n  locale.bindKeyCode(48, ['zero', '0']);\n  locale.bindKeyCode(49, ['one', '1']);\n  locale.bindKeyCode(50, ['two', '2']);\n  locale.bindKeyCode(51, ['three', '3']);\n  locale.bindKeyCode(52, ['four', '4']);\n  locale.bindKeyCode(53, ['five', '5']);\n  locale.bindKeyCode(54, ['six', '6']);\n  locale.bindKeyCode(55, ['seven', '7']);\n  locale.bindKeyCode(56, ['eight', '8']);\n  locale.bindKeyCode(57, ['nine', '9']); // numpad\n\n  locale.bindKeyCode(96, ['numzero', 'num0']);\n  locale.bindKeyCode(97, ['numone', 'num1']);\n  locale.bindKeyCode(98, ['numtwo', 'num2']);\n  locale.bindKeyCode(99, ['numthree', 'num3']);\n  locale.bindKeyCode(100, ['numfour', 'num4']);\n  locale.bindKeyCode(101, ['numfive', 'num5']);\n  locale.bindKeyCode(102, ['numsix', 'num6']);\n  locale.bindKeyCode(103, ['numseven', 'num7']);\n  locale.bindKeyCode(104, ['numeight', 'num8']);\n  locale.bindKeyCode(105, ['numnine', 'num9']);\n  locale.bindKeyCode(106, ['nummultiply', 'num*']);\n  locale.bindKeyCode(107, ['numadd', 'num+']);\n  locale.bindKeyCode(108, ['numenter']);\n  locale.bindKeyCode(109, ['numsubtract', 'num-']);\n  locale.bindKeyCode(110, ['numdecimal', 'num.']);\n  locale.bindKeyCode(111, ['numdivide', 'num/']);\n  locale.bindKeyCode(144, ['numlock', 'num']); // function keys\n\n  locale.bindKeyCode(112, ['f1']);\n  locale.bindKeyCode(113, ['f2']);\n  locale.bindKeyCode(114, ['f3']);\n  locale.bindKeyCode(115, ['f4']);\n  locale.bindKeyCode(116, ['f5']);\n  locale.bindKeyCode(117, ['f6']);\n  locale.bindKeyCode(118, ['f7']);\n  locale.bindKeyCode(119, ['f8']);\n  locale.bindKeyCode(120, ['f9']);\n  locale.bindKeyCode(121, ['f10']);\n  locale.bindKeyCode(122, ['f11']);\n  locale.bindKeyCode(123, ['f12']); // secondary key symbols\n\n  locale.bindMacro('shift + `', ['tilde', '~']);\n  locale.bindMacro('shift + 1', ['exclamation', 'exclamationpoint', '!']);\n  locale.bindMacro('shift + 2', ['at', '@']);\n  locale.bindMacro('shift + 3', ['number', '#']);\n  locale.bindMacro('shift + 4', ['dollar', 'dollars', 'dollarsign', '$']);\n  locale.bindMacro('shift + 5', ['percent', '%']);\n  locale.bindMacro('shift + 6', ['caret', '^']);\n  locale.bindMacro('shift + 7', ['ampersand', 'and', '&']);\n  locale.bindMacro('shift + 8', ['asterisk', '*']);\n  locale.bindMacro('shift + 9', ['openparen', '(']);\n  locale.bindMacro('shift + 0', ['closeparen', ')']);\n  locale.bindMacro('shift + -', ['underscore', '_']);\n  locale.bindMacro('shift + =', ['plus', '+']);\n  locale.bindMacro('shift + [', ['opencurlybrace', 'opencurlybracket', '{']);\n  locale.bindMacro('shift + ]', ['closecurlybrace', 'closecurlybracket', '}']);\n  locale.bindMacro('shift + \\\\', ['verticalbar', '|']);\n  locale.bindMacro('shift + ;', ['colon', ':']);\n  locale.bindMacro('shift + \\'', ['quotationmark', '\\'']);\n  locale.bindMacro('shift + !,', ['openanglebracket', '<']);\n  locale.bindMacro('shift + .', ['closeanglebracket', '>']);\n  locale.bindMacro('shift + /', ['questionmark', '?']);\n\n  if (platform.match('Mac')) {\n    locale.bindMacro('command', ['mod', 'modifier']);\n  } else {\n    locale.bindMacro('ctrl', ['mod', 'modifier']);\n  } //a-z and A-Z\n\n\n  for (var keyCode = 65; keyCode <= 90; keyCode += 1) {\n    var keyName = String.fromCharCode(keyCode + 32);\n    var capitalKeyName = String.fromCharCode(keyCode);\n    locale.bindKeyCode(keyCode, keyName);\n    locale.bindMacro('shift + ' + keyName, capitalKeyName);\n    locale.bindMacro('capslock + ' + keyName, capitalKeyName);\n  } // browser caveats\n\n\n  var semicolonKeyCode = userAgent.match('Firefox') ? 59 : 186;\n  var dashKeyCode = userAgent.match('Firefox') ? 173 : 189;\n  var equalKeyCode = userAgent.match('Firefox') ? 61 : 187;\n  var leftCommandKeyCode;\n  var rightCommandKeyCode;\n\n  if (platform.match('Mac') && (userAgent.match('Safari') || userAgent.match('Chrome'))) {\n    leftCommandKeyCode = 91;\n    rightCommandKeyCode = 93;\n  } else if (platform.match('Mac') && userAgent.match('Opera')) {\n    leftCommandKeyCode = 17;\n    rightCommandKeyCode = 17;\n  } else if (platform.match('Mac') && userAgent.match('Firefox')) {\n    leftCommandKeyCode = 224;\n    rightCommandKeyCode = 224;\n  }\n\n  locale.bindKeyCode(semicolonKeyCode, ['semicolon', ';']);\n  locale.bindKeyCode(dashKeyCode, ['dash', '-']);\n  locale.bindKeyCode(equalKeyCode, ['equal', 'equalsign', '=']);\n  locale.bindKeyCode(leftCommandKeyCode, ['command', 'windows', 'win', 'super', 'leftcommand', 'leftwindows', 'leftwin', 'leftsuper']);\n  locale.bindKeyCode(rightCommandKeyCode, ['command', 'windows', 'win', 'super', 'rightcommand', 'rightwindows', 'rightwin', 'rightsuper']); // kill keys\n\n  locale.setKillKey('command');\n};","var Keyboard = require('./lib/keyboard');\n\nvar Locale = require('./lib/locale');\n\nvar KeyCombo = require('./lib/key-combo');\n\nvar keyboard = new Keyboard();\nkeyboard.setLocale('us', require('./locales/us'));\nexports = module.exports = keyboard;\nexports.Keyboard = Keyboard;\nexports.Locale = Locale;\nexports.KeyCombo = KeyCombo;"],"sourceRoot":""}